plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    jcenter()
    maven { url 'https://hyperledger-org.bintray.com/besu-repo' }
    mavenCentral()
}

dependencies {
    annotationProcessor 'com.google.auto.service:auto-service:1.0-rc4'

    compile 'net.openhft:chronicle-map:3.19.0'
    compile 'io.github.microutils:kotlin-logging:1.7.8'
    compileOnly 'commons-codec:commons-codec:1.14'
    compileOnly 'com.google.auto.service:auto-service:1.0-rc4'
    compileOnly 'info.picocli:picocli:3.9.5'
    compileOnly 'org.apache.logging.log4j:log4j-api:2.12.0'
    compileOnly 'org.apache.logging.log4j:log4j-core:2.12.0'
    compileOnly 'org.hyperledger.besu:plugin-api:1.4.1-SNAPSHOT'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

//create a single Jar with all dependencies
jar {
    //dependsOn checkLicenses
    archiveBaseName = project.name + '-plugin'
    manifest {
        attributes(
                'Specification-Title': archiveBaseName.get(),
                'Specification-Version': rootProject.version,
                'Implementation-Title': archiveBaseName.get(),
                'Implementation-Version': rootProject.version
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}
